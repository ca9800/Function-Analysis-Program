
"""
NOTES:
- to do exponents do ** not ^
- def of a derivitive = f' = (f(x+h) - f(x))/h as h approaches 0
- print (x, ",", eval(f)) 

"""

from math import sin, cos, radians

#inputs
f = input("enter a function equal to f(x) in terms of x: ")                       #user inputs the funciton they want
#a = int(input("what is the lower limit of your interval?: "))      #user inputs the domain of the function 
#b = int(input("what is the upper limit of your interval?: "))      #user inputs the domain of the function
a = 0
b = 10


#defines initial values
h = 0.000000000000001
x = 0                                                              


f1 = []                         #opens an empty definition for f1 so that later we can pull it back with that x value
for x in range(a,b+1):          
    f1.append(eval(f))          #finds f(x)


fprime = []                     #opens an empty definition for f prime function
for x in range (a,b+1):         
    x = h+x                     #defines x as x + h to find f(x+h)
    fh= eval(f)                 #finds f(x+h)
    x = int(x-h+.1)-a           #redefines x in the loop
    fprime.append((fh-f1[x])/h) #solves for the derivitive using the definition of a derivitive


#prints function outputs
print ("f(x) in range", a, "to", b, "equals: ")
print (f1)

print ("f'(x) in range", a, "to", b, "equals: ")
print (fprime)

















"""
x = 0
a = 0
b = 10
for x in range (a,b+1):
    print(f1)
    print(fh)



    
    x = x-h
    
    fprime = (fh-f1)/h
    
    print (fprime)
    """

    







"""
    function = (eval(f))            #evaluates x as a fucntion
    j = f+h
    
    fh = (eval (j))
    
    print (x, ",", function)            #prints x and f(x) as a coordinate

    
    prime = ((eval(fh))-(eval(f)))/h       #def of derivitive fuction
    print (prime)
    """